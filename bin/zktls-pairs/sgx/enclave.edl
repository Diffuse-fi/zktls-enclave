enclave {
    /* Import the frequently used EDLs */
    from "sgx_env.edl" import *;
    from "sgx_stdio.edl" import *;
    from "sgx_net.edl" import *;
    from "sgx_fs.edl" import *;
    from "sgx_thread.edl" import *;
    from "sgx_process.edl" import *;
    from "sgx_tstd.edl" import *;
    from "sgx_cpuid.edl" import *;
    from "sgx_dcap.edl" import *;

    trusted {
        public sgx_status_t trusted_execution(
            [in, string] char* filename_bytes
        );
    };

    untrusted {
        /* Define the OCALLs to be called by trusted */

        void ocall_get_tcp_stream([in, string] const char* server_address, [out] void** stream_ptr);

        void ocall_tcp_write([user_check] void* stream_ptr, [in, size=data_len] const uint8_t* data, size_t data_len);

        void ocall_tcp_read([user_check] void* stream_ptr, [out, size=max_len] uint8_t* buffer, size_t max_len, [out] size_t* read_len);

        void ocall_write_to_file(
            [in, size=response_json_len] char* response_json_bytes,
            size_t response_json_len,
            [in, size=filename_len] char* filename_bytes,
            size_t filename_len
        );

        void ocall_read_from_file(
            [in, string] char* filename_bytes,
            [out, size=pairs_list_buffer_len] char* pairs_list_buffer,
            size_t pairs_list_buffer_len,
            [out] size_t* pairs_list_actual_len
        );
    };

};
